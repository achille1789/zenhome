resource_types:
  - name: github-pr
    type: docker-image
    source:
      repository: teliaoss/github-pr-resource

resources:
  - name: repo-pr-open
    icon: github
    type: github-pr
    check_every: never
    source:
      base_branch: main
      states:
        - OPEN
      repository: achille1789/zenhome
      access_token: ((github-token))
      ignore_drafts: true
  - name: frontend-pr-merged
    icon: github
    type: github-pr
    check_every: never
    source:
      base_branch: main
      states:
        - MERGED
      repository: achille1789/zenhome
      access_token: ((github-token))
      paths:
        - frontend/*
  - name: backend-pr-merged
    icon: github
    type: github-pr
    check_every: never
    source:
      base_branch: main
      states:
        - MERGED
      repository: achille1789/zenhome
      access_token: ((github-token))
      paths:
        - backend/*

jobs:
  - name: pr-open-checks
    plan:
      - get: repo-pr-open
        trigger: true
        
      - task: unit-tests
        config:
          platform: linux
          inputs:
            - name: repo-pr-open
          image_resource:
            type: registry-image
            icon: docker
            source:
              repository: registry.cloud.sky/docker-hub/nikolaik/python-nodejs
              tag: python3.9-nodejs20
          run:
            path: /bin/sh
            args:
              - -c
              - |
                cd repo-pr-open
                echo "Installing dependencies..."
                npm install
                echo "Running unit tests..."
                npm run test

  - name: deploy-frontend-to-stage
    plan:
      - get: repo-pr-open
        passed:
          - pr-open-checks
      - get: frontend-pr-merged
        trigger: true

      - task: build-frontend-code
        config:
          platform: linux
          inputs:
            - name: frontend-pr-merged
          outputs:
            - name: frontend-pr-merged
          image_resource:
            type: registry-image
            icon: docker
            source:
              repository: registry.cloud.sky/docker-hub/nikolaik/python-nodejs
              tag: python3.9-nodejs20
          run:
            path: /bin/sh
            args:
              - -c
              - |
                cd frontend-pr-merged
                echo "Installing dependencies..."
                npm install
                echo "Building code..."
                npm run build
                
      - task: upload-to-stage
        config:
          platform: linux
          inputs:
            - name: frontend-pr-merged
          image_resource:
            type: registry-image
            icon: docker
            source:
              repository: public.ecr.aws/sam/build-nodejs20.x
              tag: latest
          params:
            AWS_ACCESS_KEY_ID: ((aws-user-access-key-id))
            AWS_SECRET_ACCESS_KEY: ((aws-user-secret-access-key))
            AWS_DEFAULT_REGION: eu-west-2
            ENVIRONMENT: stage
          run:
            path: /bin/sh
            args:
              - -c
              - |
                cd frontend-pr-merged
                ls
                echo "Listing built files..."
                ls frontend/src
                echo "Building S3 bucket..."
                aws cloudformation deploy --template-file iac/template.yaml --stack-name $ENVIRONMENT-zenhome-stack --capabilities CAPABILITY_NAMED_IAM --parameter-overrides Env=$ENVIRONMENT
                echo "Uploading file to S3 bucket on stage environment..."
                aws s3 cp frontend/src s3://$ENVIRONMENT-zenhome-portal --recursive
                echo "Files uploaded to stage successfully!"
                
  - name: deploy-frontend-to-prod
    plan:
      - get: frontend-pr-merged
#        trigger: true
        passed:
          - deploy-frontend-to-stage

      - task: build-frontend-code
        config:
          platform: linux
          inputs:
            - name: frontend-pr-merged
          outputs:
            - name: frontend-pr-merged
          image_resource:
            type: registry-image
            icon: docker
            source:
              repository: registry.cloud.sky/docker-hub/nikolaik/python-nodejs
              tag: python3.9-nodejs20
          run:
            path: /bin/sh
            args:
              - -c
              - |
                cd frontend-pr-merged
                echo "Installing dependencies..."
                npm install
                echo "Building code..."
                npm run build
                
      - task: deploy-frontend-to-prod
        config:
          platform: linux
          inputs:
            - name: frontend-pr-merged
          image_resource:
            type: registry-image
            icon: docker
            source:
              repository: public.ecr.aws/sam/build-nodejs20.x
              tag: latest
          params:
            AWS_ACCESS_KEY_ID: ((aws-user-access-key-id))
            AWS_SECRET_ACCESS_KEY: ((aws-user-secret-access-key))
            AWS_DEFAULT_REGION: eu-west-2
            ENVIRONMENT: prod
          run:
            path: /bin/sh
            args:
              - -c
              - |
                cd frontend-pr-merged
                ls
                echo "Listing built files..."
                ls frontend/src
                echo "Building S3 bucket..."
                aws cloudformation deploy --template-file iac/template.yaml --stack-name $ENVIRONMENT-zenhome-stack --capabilities CAPABILITY_NAMED_IAM --parameter-overrides Env=$ENVIRONMENT
                echo "Uploading file to S3 bucket on stage environment..."
                aws s3 cp frontend/src s3://$ENVIRONMENT-zenhome-portal --recursive
                echo "Files uploaded to stage successfully!"
  
  - name: deploy-backend-to-stage
    plan:
      - get: repo-pr-open
        passed:
          - pr-open-checks
      - get: backend-pr-merged
        trigger: true

      - task: build-frontend-code
        config:
          platform: linux
          inputs:
            - name: backend-pr-merged
          outputs:
            - name: backend-pr-merged
          image_resource:
            type: registry-image
            icon: docker
            source:
              repository: registry.cloud.sky/docker-hub/nikolaik/python-nodejs
              tag: python3.9-nodejs20
          run:
            path: /bin/sh
            args:
              - -c
              - |
                cd backend-pr-merged
                echo "Installing dependencies..."
                npm install
                echo "Building code..."
                npm run build

      - task: upload-to-stage
        config:
          platform: linux
          inputs:
            - name: backend-pr-merged
          image_resource:
            type: registry-image
            icon: docker
            source:
              repository: public.ecr.aws/sam/build-nodejs20.x
              tag: latest
          params:
            AWS_ACCESS_KEY_ID: ((aws-user-access-key-id))
            AWS_SECRET_ACCESS_KEY: ((aws-user-secret-access-key))
            AWS_DEFAULT_REGION: eu-west-2
            ENVIRONMENT: stage
          run:
            path: /bin/sh
            args:
              - -c
              - |
                cd backend-pr-merged
                echo "Listing built files..."
                ls

  - name: deploy-backend-to-prod
    plan:
      - get: backend-pr-merged
        #        trigger: true
        passed:
          - deploy-backend-to-stage

      - task: deploy-backend-to-prod
        config:
          platform: linux
          image_resource:
            type: registry-image
            icon: docker
            source:
              repository: public.ecr.aws/sam/build-nodejs20.x
              tag: latest
          params:
            AWS_ACCESS_KEY_ID: ((aws-user-access-key-id))
            AWS_SECRET_ACCESS_KEY: ((aws-user-secret-access-key))
            ENVIRONMENT: prod
          run:
            path: /bin/sh
            args:
              - -c
              - |
                echo "Uploading to stage..."
                echo "Files uploaded to prod successfully!"